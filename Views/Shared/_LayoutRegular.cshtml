@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - dotnet_facebook</title>
    <link rel="stylesheet" href="~/css/regularsite.css" />
    <link rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/@@materialstyle/materialstyle@3.1.1/dist/css/materialstyle.min.css"
          integrity="sha384-TveZ4SBMG9Zwu44Pq5aK2bgL+4CaFRTtx6pSSsxmQKWhIRKoONDSRW+k+NA9A0Gk"
          crossorigin="anonymous">
    @RenderSection("Styles", required: false)
</head>
<body class="h-100">
    @if (ViewData["Navbar"] == null || (bool)ViewData["Navbar"])
	{
        <partial name="_Navbar" />
    }
    <div class="mainBody h-100">
        @RenderBody()
    </div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <!-- Popper JS -->
    <script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.11.8/dist/umd/popper.min.js"
            integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
            crossorigin="anonymous"></script>

    <!-- MDC Ripple JS (Only for Ripple effects) -->
    <script src="https://cdn.jsdelivr.net/npm/@@material/ripple@14.0.0/dist/mdc.ripple.min.js"
            integrity="sha384-9QANVmWxL3S8VRs8x1Q+bF1Zzogpy7P/Qw1+y5qHLdC1ig0EuoHg9VbB1SXyecdZ"
            crossorigin="anonymous"></script>

    <!-- Material Style JS -->
    <script src="https://cdn.jsdelivr.net/npm/@@materialstyle/materialstyle@3.1.1/dist/js/materialstyle.min.js"
            integrity="sha384-rqhP61M9WSmzd7+ssgyoWP2I+R68vVHx7o+UmmIs6/Nxe8Lt1DoF6+0CKptZIXC0"
            crossorigin="anonymous"></script>
    @RenderSection("Scripts", required: false)
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    @if (ViewData["Navbar"] == null || (bool)ViewData["Navbar"])
    {
        <script>
            // add or remove disabled attribute from search button based on if searchTerm is empty
            document.getElementById('searchTerm').addEventListener('input', function () {
            var searchTerm = document.getElementById('searchTerm').value;
            var searchButton = document.getElementById('searchButton');
            if (searchTerm.length > 0) {
            searchButton.classList.remove('disabled');
            searchButton.disabled = false;
            } else {
            searchButton.classList.add('disabled');
            searchButton.disabled = true;
            }
            });
        </script>
    }
    <script>
        document.addEventListener('DOMContentLoaded', (event) => {
            // Initialize
            var selectList = [].slice.call(document.querySelectorAll('.form-select'))
            var selectFields = selectList.map(function (select) {
            return new materialstyle.SelectField(select)
            })

            // Initialize Ripple
            const rippleSurface = Array.prototype.slice.call(document.querySelectorAll('.ripple-surface'))
            rippleSurface.map(s => {
            return new mdc.ripple.MDCRipple(s)
            })
        });
    </script>
</body>
</html>
