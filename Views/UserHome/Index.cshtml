@model IEnumerable<dotnet_facebook.Models.DatabaseObjects.Posts.MainPost>

@{
    ViewData["Title"] = "Facebuk";
    Layout = "_LayoutRegular";
}
<div class="card">
    <form asp-action="NewPost">
        <div class="row p-0 m-0">
            <div class="col p-0 m-0">
                <div class="d-inline-block">
                    @if (string.IsNullOrEmpty(ViewBag.LocalUser.UserProfile.ProfilePictureFileName))
                    {
                        <img class="rounded-4 d-inline-block mx-2" style="height:48px; width:48px" src="~/defaultUser.jpg" alt="pfp">
                    }
                    else
                    {
                        <img class="rounded-4 d-inline-block mx-2" style="height:48px; width:48px" src="~/uploadedFiles/@ViewBag.LocalUser.UserProfile.ProfilePictureFileName" alt="pfp">
                    }
                    <span>@ViewBag.LocalUser.Nickname</span>
                </div>
                <div class="form-floating multi-select w-50 float-end me-2 rounded-top-4">
                    <select class="form-select" name="selectedTagIds" multiple>
                        @foreach (var tag in ViewBag.Tags)
                        {
                            <option value="@tag.Value">@tag.Text</option>
                        }
                    </select>
                    <label>Select Tags</label>
                </div>
                <div class="form-floating form-floating-outlined-primary w-100 p-2 m-0 d-flex rounded-4">
                    <textarea maxlength="200" type="text" class="form-control overflow-visible" name="Content" id="post-outline" autocomplete="off" style="resize:none; height:150px"></textarea>
                    <label for="post-outline">New Post</label>
                </div>
                <span class="text-danger">@Html.ValidationMessage("Content")</span>
                <button type="submit" value="NewPost" class="btn btn-outline-primary p-2 my-2 w-100 rounded-4">
                    Post!
                    <span class="ripple-surface"></span>
                </button>
                
            </div>
        </div>
    </form>

    <hr class="my-5 mx-5" />

    <div class="form-floating w-50 float-end me-2 rounded-top-4">
        <select class="form-select" name="selectedPostType" onchange="filterPosts()">
            <option value="-2">All</option>
            <option value="-1">Friends</option>
            @foreach (var tag in ViewBag.Tags)
            {
                <option value="@tag.Value">@tag.Text</option>
            }
        </select>
        <label>Filter posts</label>
    </div>
    
    @foreach (var post in Model)
    {
    <div class="bg-secondary w-100 h-auto rounded-4 container my-3">
        <div class="row h-100">
            <div class="col p-2">
                <a asp-action="Index" asp-controller="UserProfile" asp-route-id="@post.OwnerUser.UserId">
                    @if (string.IsNullOrEmpty(post.OwnerUser.UserProfile.ProfilePictureFileName))
                    {
                        <img class="rounded-4 m-2 d-inline-block" style="height:76px; width:76px" src="~/defaultUser.jpg" alt="Profile Picture">
                    }
                    else
                    {
                        <img class="rounded-4 m-2 d-inline-block" style="height:76px; width:76px" src="~/uploadedFiles/@post.OwnerUser.UserProfile.ProfilePictureFileName" alt="Profile Picture">
                    }

                    <span class="bg-white rounded-4 m-2 d-inline-block w-auto px-3 text-center">
                        @post.OwnerUser.Nickname
                    </span>
                </a>
            </div>
            <div class="col-9 p-2 m-2">
                <p class="w-auto text-black-50" style="height:5%">
                    <i>
                        @post.PostDate.ToString("dd/MM/yyyy HH:mm")
                    </i>
                </p>
                <div class="bg-white w-auto h-auto rounded-4 container py-2" style="height:70%">
                    <p>
                        @post.Content
                    </p>
                </div>
                @if (post.Tags != null && post.Tags.Count > 0)
                {
                    <p class="w-auto h-auto mt-2">
                        <i>
                            @foreach (var tag in post.Tags)
                            {
                                <span class="badge bg-primary opacity-50 rounded-4">@tag.TagName</span>
                            }
                        </i>
                    </p>
                }
                <div class="container" style="height:20%">
                    <div class="row h-100">
                        <div class="col p-0">
                            <button class="h-auto w-auto btn btn-primary my-2 rounded-4" id="likeButton" onclick="likePost(@post.PostId)">Like</button>
                            <span class="d-inline-block my-2 py-0 h-auto w-auto btn btn-primary disabled rounded-4" id="likeCount-@post.PostId">@post.Likes!.Count</span>
                        </div>
                        <div class="col p-0">
                            <a asp-action="ViewPost" asp-route-id="@post.PostId" class="h-auto w-auto btn btn-primary my-2 rounded-4">Reply</a>
                        </div>
                        <div class="col-6 p-0">
                            @if (post.PostLocation != null)
                            {
                            <span class="h-auto w-auto btn disabled btn-primary my-2 float-end opacity-100 rounded-4">
                                <i>@post.PostLocation</i>
                            </span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    }

    @* <a asp-action="LoadMorePosts" class="btn btn-close-white w-100 rounded-4 mt-3">Load more</a> *@
</div>

@section Scripts {
    <script>
        function likePost(postId) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("LikePost", "UserHome")',
                data: { postId: postId },
                success: function (data) {
                    // get like count span
                    var likeCountSpan = document.getElementById('likeCount-' + postId);
                    if (data.alreadyLiked)
                    {
                        // decrement like by 1
                        likeCountSpan.innerHTML = parseInt(likeCountSpan.innerHTML) - 1;
                    }
                    else
                    {
                        // increment like by 1
                        likeCountSpan.innerHTML = parseInt(likeCountSpan.innerHTML) + 1;
                    }
                },
                error: function (xhr, status, error) {

                }
            });
        }

        function filterPosts() {
            // Get selected value from the dropdown
            var selectedValue = document.querySelector('select[name="selectedPostType"]').value;

            // Create a URL to call the Index action with the selected value
            var url = '@Url.Action("Index", "UserHome", new { route = "__PLACEHOLDER__" })';

            // Replace the placeholder with the actual selected value
            url = url.replace('__PLACEHOLDER__', selectedValue);

            // Redirect to the constructed URL
            window.location.href = url;
        }

        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(sendPosition, showError);
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        }

        function sendPosition(position) {
            var lat = position.coords.latitude;
            var lon = position.coords.longitude;

            console.log("Latitude: " + lat + ", Longitude: " + lon);  // Debugging log

            // Send the location data to the server using AJAX
            fetch('/Home/SaveLocation', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ Latitude: lat, Longitude: lon })
            }).then(response => {
                if (response.ok) {
                    console.log('Location saved successfully.');
                } else {
                    console.error('Error saving location.');
                }
            });
        }

        function showError(error) {
            switch (error.code) {
                case error.PERMISSION_DENIED:
                    alert("User denied the request for Geolocation.");
                    break;
                case error.POSITION_UNAVAILABLE:
                    alert("Location information is unavailable.");
                    break;
                case error.TIMEOUT:
                    alert("The request to get user location timed out.");
                    break;
                case error.UNKNOWN_ERROR:
                    alert("An unknown error occurred.");
                    break;
            }
        }

        document.addEventListener('DOMContentLoaded', (event) => {
            getLocation();  

            function isNumeric(str) {
                if (typeof str != "string") return false // we only process strings!
                return !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...
                    !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail
            }

            // Function to set the selected option based on the query parameter
            function setSelectedOption(value) {
                const selectElement = document.querySelector('select[name="selectedPostType"]');

                console.log('Select: ' + selectElement);
                console.log('Setting selected option to: ' + value);

                // Set the selected option
                selectElement.value = value;
            }

            var route = window.location.pathname.split("/").pop();

            if (isNumeric(route)) {
                // Set the selected option when the page loads
                setSelectedOption(route);
            }
            else 
            { 
                setSelectedOption('-2');
            }
        });
    </script>
}